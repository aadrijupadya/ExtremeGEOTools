{"ast":null,"code":"var _jsxFileName = \"/Users/aadrijupadya/Desktop/ExtremeGEOTools/frontend/src/components/QueryPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport QueryForm from './QueryForm';\nimport { getPricingModels } from '../services/api';\nimport { usePersistentDraft } from '../hooks/usePersistentDraft';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction estimateTokensFromText(text) {\n  const chars = (text || '').length;\n  return Math.ceil(chars / 4); // simple heuristic\n}\nfunction QueryPage({\n  onSubmit,\n  onResults,\n  isLoading\n}) {\n  _s();\n  var _draft$engines;\n  const [pricing, setPricing] = useState({\n    models: [],\n    defaults: {\n      input_per_1k: 0.0025,\n      output_per_1k: 0.01\n    }\n  });\n  const {\n    loadDraft,\n    saveDraft,\n    clearDraft\n  } = usePersistentDraft('egt.queryDraft.v1');\n  const initial = loadDraft() || {\n    text: '',\n    engines: ['openai'],\n    intent: 'commercial',\n    temperature: 0.2\n  };\n  const [draft, setDraft] = useState(initial);\n  const saveTimer = useRef(null);\n  useEffect(() => {\n    (async () => {\n      const p = await getPricingModels();\n      setPricing(p || {\n        models: [],\n        defaults: {\n          input_per_1k: 0.0025,\n          output_per_1k: 0.01\n        }\n      });\n    })();\n  }, []);\n\n  // Debounced autosave to localStorage\n  useEffect(() => {\n    if (saveTimer.current) clearTimeout(saveTimer.current);\n    saveTimer.current = setTimeout(() => {\n      saveDraft(draft);\n    }, 300);\n    return () => saveTimer.current && clearTimeout(saveTimer.current);\n  }, [draft]);\n  const activeModel = useMemo(() => {\n    var _pricing$defaults, _pricing$defaults2;\n    const engines = draft.engines || ['openai'];\n    const engine = engines.includes('openai') ? 'openai' : engines[0] || 'openai';\n    // default model per engine\n    const model = engine === 'perplexity' ? 'sonar' : 'gpt-4o';\n    const m = (pricing.models || []).find(x => x.id === model);\n    return m || {\n      id: model,\n      input_per_1k: ((_pricing$defaults = pricing.defaults) === null || _pricing$defaults === void 0 ? void 0 : _pricing$defaults.input_per_1k) || 0.0025,\n      output_per_1k: ((_pricing$defaults2 = pricing.defaults) === null || _pricing$defaults2 === void 0 ? void 0 : _pricing$defaults2.output_per_1k) || 0.01\n    };\n  }, [draft.engines, pricing]);\n  const estimate = useMemo(() => {\n    const inputTokens = estimateTokensFromText(draft.text || '');\n    const inputCostPer1k = activeModel.input_per_1k || 0.0025;\n    const estimatedCost = inputTokens / 1000.0 * inputCostPer1k;\n    return {\n      inputTokens,\n      estimatedCost\n    };\n  }, [draft.text, activeModel]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'grid',\n      gridTemplateColumns: '1fr 320px',\n      gap: '1rem',\n      alignItems: 'start'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(QueryForm, {\n        onSubmit: onSubmit,\n        onResults: onResults,\n        isLoading: isLoading,\n        onDraftChange: d => setDraft(d),\n        initialDraft: initial\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          clearDraft();\n          setDraft({\n            text: '',\n            engines: ['openai'],\n            intent: 'commercial',\n            temperature: 0.2\n          });\n        },\n        style: {\n          marginTop: '0.5rem'\n        },\n        children: \"Reset draft\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      style: {\n        border: '1px solid #ddd',\n        padding: '0.75rem',\n        borderRadius: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: 0\n        },\n        children: \"Live Cost Estimate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: 14\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Engine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 16\n          }, this), \": \", (_draft$engines = draft.engines) !== null && _draft$engines !== void 0 && _draft$engines.includes('perplexity') ? 'perplexity' : 'openai']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Model\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 16\n          }, this), \": \", activeModel.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Input tokens\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 16\n          }, this), \": \", estimate.inputTokens]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Input cost/1K\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 16\n          }, this), \": $\", Number(activeModel.input_per_1k).toFixed(4)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: 16\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Estimated cost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), \": $\", estimate.estimatedCost.toFixed(6)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#666',\n            marginTop: '0.5rem'\n          },\n          children: \"Output tokens are not estimated. Actual cost is shown after submission.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(QueryPage, \"H0xbBSuF786T8PLnaCBqd6uhJqg=\", false, function () {\n  return [usePersistentDraft];\n});\n_c = QueryPage;\nexport default QueryPage;\nvar _c;\n$RefreshReg$(_c, \"QueryPage\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","QueryForm","getPricingModels","usePersistentDraft","jsxDEV","_jsxDEV","estimateTokensFromText","text","chars","length","Math","ceil","QueryPage","onSubmit","onResults","isLoading","_s","_draft$engines","pricing","setPricing","models","defaults","input_per_1k","output_per_1k","loadDraft","saveDraft","clearDraft","initial","engines","intent","temperature","draft","setDraft","saveTimer","p","current","clearTimeout","setTimeout","activeModel","_pricing$defaults","_pricing$defaults2","engine","includes","model","m","find","x","id","estimate","inputTokens","inputCostPer1k","estimatedCost","style","display","gridTemplateColumns","gap","alignItems","children","onDraftChange","d","initialDraft","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginTop","border","padding","borderRadius","fontSize","Number","toFixed","color","_c","$RefreshReg$"],"sources":["/Users/aadrijupadya/Desktop/ExtremeGEOTools/frontend/src/components/QueryPage.js"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from 'react';\nimport QueryForm from './QueryForm';\nimport { getPricingModels } from '../services/api';\nimport { usePersistentDraft } from '../hooks/usePersistentDraft';\n\nfunction estimateTokensFromText(text) {\n  const chars = (text || '').length;\n  return Math.ceil(chars / 4); // simple heuristic\n}\n\nfunction QueryPage({ onSubmit, onResults, isLoading }) {\n  const [pricing, setPricing] = useState({ models: [], defaults: { input_per_1k: 0.0025, output_per_1k: 0.01 } });\n  const { loadDraft, saveDraft, clearDraft } = usePersistentDraft('egt.queryDraft.v1');\n  const initial = loadDraft() || { text: '', engines: ['openai'], intent: 'commercial', temperature: 0.2 };\n  const [draft, setDraft] = useState(initial);\n  const saveTimer = useRef(null);\n\n  useEffect(() => {\n    (async () => {\n      const p = await getPricingModels();\n      setPricing(p || { models: [], defaults: { input_per_1k: 0.0025, output_per_1k: 0.01 } });\n    })();\n  }, []);\n\n  // Debounced autosave to localStorage\n  useEffect(() => {\n    if (saveTimer.current) clearTimeout(saveTimer.current);\n    saveTimer.current = setTimeout(() => {\n      saveDraft(draft);\n    }, 300);\n    return () => saveTimer.current && clearTimeout(saveTimer.current);\n  }, [draft]);\n\n  const activeModel = useMemo(() => {\n    const engines = draft.engines || ['openai'];\n    const engine = engines.includes('openai') ? 'openai' : engines[0] || 'openai';\n    // default model per engine\n    const model = engine === 'perplexity' ? 'sonar' : 'gpt-4o';\n    const m = (pricing.models || []).find(x => x.id === model);\n    return m || { id: model, input_per_1k: pricing.defaults?.input_per_1k || 0.0025, output_per_1k: pricing.defaults?.output_per_1k || 0.01 };\n  }, [draft.engines, pricing]);\n\n  const estimate = useMemo(() => {\n    const inputTokens = estimateTokensFromText(draft.text || '');\n    const inputCostPer1k = activeModel.input_per_1k || 0.0025;\n    const estimatedCost = (inputTokens / 1000.0) * inputCostPer1k;\n    return { inputTokens, estimatedCost };\n  }, [draft.text, activeModel]);\n\n  return (\n    <div style={{ display: 'grid', gridTemplateColumns: '1fr 320px', gap: '1rem', alignItems: 'start' }}>\n      <div>\n        <QueryForm \n          onSubmit={onSubmit} \n          onResults={onResults} \n          isLoading={isLoading}\n          onDraftChange={(d) => setDraft(d)}\n          initialDraft={initial}\n        />\n        <button onClick={() => { clearDraft(); setDraft({ text: '', engines: ['openai'], intent: 'commercial', temperature: 0.2 }); }} style={{ marginTop: '0.5rem' }}>\n          Reset draft\n        </button>\n      </div>\n      <aside style={{ border: '1px solid #ddd', padding: '0.75rem', borderRadius: 8 }}>\n        <h3 style={{ marginTop: 0 }}>Live Cost Estimate</h3>\n        <div style={{ fontSize: 14 }}>\n          <div><strong>Engine</strong>: {draft.engines?.includes('perplexity') ? 'perplexity' : 'openai'}</div>\n          <div><strong>Model</strong>: {activeModel.id}</div>\n          <div><strong>Input tokens</strong>: {estimate.inputTokens}</div>\n          <div><strong>Input cost/1K</strong>: ${Number(activeModel.input_per_1k).toFixed(4)}</div>\n          <hr />\n          <div style={{ fontSize: 16 }}>\n            <strong>Estimated cost</strong>: ${estimate.estimatedCost.toFixed(6)}\n          </div>\n          <p style={{ color: '#666', marginTop: '0.5rem' }}>Output tokens are not estimated. Actual cost is shown after submission.</p>\n        </div>\n      </aside>\n    </div>\n  );\n}\n\nexport default QueryPage;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}